<?php
/**
 * Created by PhpStorm.
 * User: Jim FAN
 * Date: 2017/11/28
 * Time: 17:52
 */

namespace app\admin\controller;

use app\admin\controller\Base;

class Admin extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if ($this->checkUnLogin()) {
            return $this->redirect('index/login');
        }
    }

    /**
     * 添加管理员
     */
    public function addAdmin()
    {
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $res = adminforwarding('admin', 'addAdmin', $post);
            if ($res['data']) {
                return 1;
            } else {
                return 0;
            }
        } else {
            $res = adminforwarding('admin', 'roleList', ['op'=>'all']);
            $this->assign('roleList', $res['data']);
            return $this->fetch('admin/admin-add');
        }
    }

    /**
     * 编辑管理员
     */
    public function editAdmin()
    {
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $res = adminforwarding('admin', 'editAdmin', $post);
            if ($res['data']) {
                return 1;
            } else {
                return 0;
            }
        } else {
            $u_id = $this->request->get('u_id');
            $admin = adminforwarding('admin', 'getAdminById', ['u_id' => $u_id]);
            $this->assign('admin', $admin['data']);
            $res = adminforwarding('admin', 'roleList', ['op'=>'all']);
            $this->assign('roleList', $res['data']);
            return $this->fetch('admin/admin-edit');
        }

    }

    /**
     * 管理员列表
     */
    public function listAdmin()
    {
        $this->assign('editUrl', url('Admin/editAdmin'));
        $this->assign('addUrl', url('Admin/addAdmin'));
        $get = $this->request->get();
        $get['username'] = empty($get['username']) ? '' : $get['username'];
        $get['start_time'] = empty($get['start_time']) ? '' : $get['start_time'];
        $get['end_time'] = empty($get['end_time']) ? '' : $get['end_time'];
        $get['page'] = empty($get['page']) ? 0 : $get['page'];
        $res = adminforwarding('admin', 'listAdmin', $get);
        if ($res['data']) {
            $data = $res['data'];
            $url = $this->request->baseUrl() . '?username=' . $get['username'] . '&start_time=' . $get['start_time'] . '&end_time=' . $get['end_time'];
            $this->assign('data', $data['list']);
            $this->assign('get', $get);
            $page = $this->getPage($url, $data['cur'], $data['count'], $data['start'], $data['end']);
            $this->assign('page', $page);
            $this->assign('updateAdminStatusUrl', url('Admin/updateAdminStatus'));
            return $this->fetch('admin/admin-list');
        } else {
            return $this->error('获取数据失败！', url('index/welcome'), '', 3);
        }

    }

    /**
     * 修改用户状态
     * @return int
     */
    public function updateAdminStatus()
    {
        $data = $this->request->post();
        $arr = [];
        if ($data['op'] == 'delete') { // 是否删除
            $arr['u_id'] = $data['u_id'];
            $arr['op'] = 'delete';
        } else if ($data['op'] == 'u_is_enabled') {//修改状态 是否启用 0 启用 1 弃用
            $arr['op'] = 'is_enabled';
            $arr['u_id'] = $data['u_id'];
            $arr['u_is_enabled'] = empty($data['u_is_enabled']) ? 0 : 1;
        }
        $res = adminforwarding('admin', 'updateAdminStatus', $arr);
        if ($res['data']) {
            return 1;
        } else {
            return 0;
        }
    }

    /**
     * 角色列表
     */
    public function listRole()
    {
        $this->assign('addRoleUrl',url('Admin/addRole'));
        $data['page'] = $this->request->get('page',0);
        $data['r_name'] = $this->request->get('r_name','');
        $data['op'] = 'list';
        $res = adminforwarding('admin', 'roleList',$data);
        if($res['data']){
            $this->assign('r_name',$data['r_name']);
            $this->assign('authList',$res['data']['list']);
            $url = $this->request->baseUrl().'?r_name='.$data['r_name'];
            $this->assign('page',$this->getPage($url,$res['data']['cur'], $res['data']['count'], $res['data']['start'], $res['data']['end']));
            return $this->fetch('admin/admin-role');
        }
    }

    /**
     * 添加角色
     */
    public function addRole()
    {
        if($this->request->isPost()){
            $post = $this->request->post();
            $post['op'] = 'add';
            $adminInfo = $this->adminInfo;
            $post['r_creator'] = $adminInfo['u_username'];
            $post['a_id'] = empty($post['a_id'])?0:$post['a_id'];
            $res = adminforwarding('admin', 'roleList',$post);
            if($res['data']){
                return 1;
            }else{
                return 0;
            }
        }else{
            //权限类别
            $this->assign('auth_category',$this->auth_category);
            //权限列表
            $data = ['op'=>'all'];
            $res = adminforwarding('admin', 'authList',$data);
            $this->assign('authList',$res['data']);
            return $this->fetch('admin/role-add');
        }
    }

    /**
     * 修改角色
     */
    public function editRole()
    {
        if($this->request->isPost()){
            $post = $this->request->post();
            $post['op'] = 'edit';
            $post['a_id'] = empty($post['a_id'])?0:$post['a_id'];
            $res = adminforwarding('admin', 'roleList',$post);
            if($res['data']){
                return 1;
            }else{
                return 0;
            }
        }else{
            //权限类别
            $this->assign('auth_category',$this->auth_category);
            //权限列表
            $data = ['op'=>'all'];
            $res = adminforwarding('admin', 'authList',$data);
            $this->assign('authList',$res['data']);
            //获取角色拥有的权限
            $auth = ['op'=>'getAuth'];
            $auth['r_id'] = $this->request->get('r_id',0);
            $auth = adminforwarding('admin', 'roleList',$auth);
            $this->assign('role_auth',$auth['data']['role_auth']);
            $this->assign('role',$auth['data']['role']);
            return $this->fetch('admin/role-edit');
        }
    }

    /**
     * 删除角色
     */
    public  function deleteRole(){
        $data = $this->request->post();
        $data['op'] = 'delete';
        $res = adminforwarding('admin', 'roleList',$data);
        if($res['data']){
            return $res['data'];
        }else{
            return 0;
        }
    }
    /**
     * 权限状态修改
     */
    public function updateAuthStatus(){
        $data = $this->request->post();
        $res = adminforwarding('admin', 'authList',$data);
        if($res['data']){
            return 1;
        }else{
            return 0;
        }
    }
    /**
     * 权限列表
     */
    public function listAuth()
    {
        $this->assign('updateAuthStatusUrl', url('Admin/updateAuthStatus'));
        $data = ['op'=>'list'];
        $data['page'] = $this->request->get('page',0);
        $res = adminforwarding('admin', 'authList',$data);
        if($res['data']){
            $this->assign('authList',$res['data']['list']);
            $page = $this->getPage($this->request->baseUrl(), $res['data']['cur'], $res['data']['count'], $res['data']['start'], $res['data']['end']);
            $this->assign('page', $page);
            $this->assign('authStatusUrl',url('Admin/updateAuthStatus'));
            $this->assign('category',$this->auth_category);
            return $this->fetch('admin/admin-rule');
        }
    }


}